apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply plugin: 'com.google.gms.google-services'

/**
 * This is the configuration block to customize your React Native Android app.
 */
react {
    /* Folders */
    // Uncomment and modify the paths as necessary if you want to customize them
    // root = file("../")
    // reactNativeDir = file("../node_modules/react-native")
    // codegenDir = file("../node_modules/@react-native/codegen")
    // cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    // nodeExecutableAndArgs = ["node"]
    // bundleCommand = "ram-bundle"
    // bundleConfig = file(../rn-cli.config.js)
    // bundleAssetName = "MyApplication.android.bundle"
    // entryFile = file("../js/MyApplication.android.js")
    // extraPackagerArgs = []

    /* Hermes Commands */
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    // hermesFlags = ["-O", "-output-source-map"]
}

/**
 * Set this to true to run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 */
def jscFlavor = 'org.webkit:android-jsc:+'  // You can customize this if needed

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libjsc.so'
        pickFirst 'lib/arm64-v8a/libjsc.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    }

    namespace "com.mynew1212"
    defaultConfig {
        applicationId "com.mynew1212"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // Make sure processReleaseGoogleServices runs before mapReleaseSourceSetPaths
    tasks.whenTaskAdded { task ->
        if (task.name == 'mapReleaseSourceSetPaths') {
            task.dependsOn 'processReleaseGoogleServices'
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation platform('com.google.firebase:firebase-bom:33.1.2') // Firebase BOM
    implementation 'com.google.firebase:firebase-messaging'           // Firebase Messaging
    implementation("com.facebook.react:react-android")
    implementation platform('com.google.firebase:firebase-bom:33.1.2')
    implementation 'com.google.firebase:firebase-analytics'
    implementation project(':react-native-file-viewer')

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Google services plugin should be at the end
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); 
applyNativeModulesAppBuildGradle(project)
apply plugin: 'com.google.gms.google-services'
